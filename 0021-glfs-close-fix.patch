From 441ded56fdbbabeef6a5e7a0701cfdf14980f862 Mon Sep 17 00:00:00 2001
From: Jiffin Tony Thottan <jthottan@redhat.com>
Date: Tue, 15 Sep 2015 16:50:02 +0530
Subject: [PATCH] FSAL_GLUSTER : Clean the glfd and set close flag properly in file_close()

Previously glfd holds by obj->hdl in ganesha will set to NULL only if
glfs_close() succeed. But actually this glfd will be already freed by
glfs_close(). Thus ganesha holds an invalid glfd. Since close flag is
not set, any further fop hitting same file might end up by using this
invalid glfd.

Change-Id: I2cbc40d7956391e7a839cdf3e589dbddb10040c2
Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
---
 src/FSAL/FSAL_GLUSTER/handle.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/FSAL/FSAL_GLUSTER/handle.c b/src/FSAL/FSAL_GLUSTER/handle.c
index 91dfb37..93ac563 100644
--- a/src/FSAL/FSAL_GLUSTER/handle.c
+++ b/src/FSAL/FSAL_GLUSTER/handle.c
@@ -1329,13 +1329,13 @@ static fsal_status_t file_close(struct fsal_obj_handle *obj_hdl)
 	rc = glfs_close(objhandle->glfd);
 	if (rc != 0) {
 		status = gluster2fsal_error(errno);
-		goto out;
+		LogCrit(COMPONENT_FSAL,
+			"Error : close returns with %s", strerror(errno));
 	}
 
 	objhandle->glfd = NULL;
 	objhandle->openflags = FSAL_O_CLOSED;
 
- out:
 #ifdef GLTIMING
 	now(&e_time);
 	latency_update(&s_time, &e_time, lat_file_close);
-- 
1.7.1

