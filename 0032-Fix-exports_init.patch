From 06b85fd8263ff9a8331c36821dad9ec6be366798 Mon Sep 17 00:00:00 2001
From: Soumya Koduri <skoduri@redhat.com>
Date: Wed, 2 Dec 2015 14:36:18 +0530
Subject: [PATCH 03/10] exports_init(): Unref the export if pNFS DS is enabled

During fsal_commit(), if pNFS DS is supported, FSALs take
a ref on the export entry as part of pnfs_ds_insert().
This reference has to be removed while trying to free that
entry, in case of any errors found at later stage of AddExports.

BUG: 1241341
Change-Id: I355e897b862b8ad278555c1e281a4c6af61dd08a
Signed-off-by: Soumya Koduri <skoduri@redhat.com>
---
 src/support/exports.c |   18 +++++++++++++++++-
 1 files changed, 17 insertions(+), 1 deletions(-)

diff --git a/src/support/exports.c b/src/support/exports.c
index 0914a82..061f13f 100644
--- a/src/support/exports.c
+++ b/src/support/exports.c
@@ -52,6 +52,7 @@
 #include "export_mgr.h"
 #include "fsal_up.h"
 #include "sal_functions.h"
+#include "pnfs_utils.h"
 
 struct global_export_perms export_opt = {
 	.def.anonymous_uid = ANON_UID,
@@ -641,7 +642,22 @@ static void *export_init(void *link_mem, void *self_struct)
 		return export;
 	} else { /* free resources case */
 		export = self_struct;
-		free_export(export);
+		/* As part of create_export(), FSAL shall take
+		 * reference to the export if it supports pNFS.
+		 */
+		if (export->has_pnfs_ds) {
+			assert(export->refcnt == 1);
+			/* export is not yet added to the export
+			 * manager. Hence there shall not be any
+			 * other thread racing here. So no need
+			 * to take lock. */
+			export->has_pnfs_ds = false;
+			pnfs_ds_remove(export->export_id, true);
+		} else {
+			assert(export->refcnt == 0);
+			free_export(export);
+		}
+
 		return NULL;
 	}
 }
-- 
1.7.1

