From facaa5865fb2cfd4731194a88f456657367486b0 Mon Sep 17 00:00:00 2001
From: Soumya Koduri <skoduri@redhat.com>
Date: Thu, 9 Jul 2015 11:58:55 +0530
Subject: [PATCH 09/20] lock: Fixed an issue with lock_length while splitting locks

In 'subtract_lock_from_entry()', while doing the right split of
the locks, if the 'found_entry_end value' is UINT64_MAX, it
indicates that the 'sle_lock.lock_length' is zero and the lock is
held till the end of the file. In such cases the split-lock length
should be zero as well to indicate the file end.

Change-Id: I69c1061e7b81634db12e0efcd210637aee7d79ef
Signed-off-by: Soumya Koduri <skoduri@redhat.com>
---
 src/SAL/state_lock.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/SAL/state_lock.c b/src/SAL/state_lock.c
index 52f5e04..39b51da 100644
--- a/src/SAL/state_lock.c
+++ b/src/SAL/state_lock.c
@@ -996,8 +996,17 @@ static state_status_t subtract_lock_from_entry(cache_entry_t *entry,
 		}
 
 		found_entry_right->sle_lock.lock_start = range_end + 1;
-		found_entry_right->sle_lock.lock_length =
-		    found_entry_end - range_end;
+
+		/* found_entry_end being UINT64_MAX indicates that the
+		 * sle_lock.lock_length is zero and the lock is held till
+		 * the end of the file. In such case assign the split lock
+		 * length too to zero to indicate the file end.
+		 */
+		if (found_entry_end == UINT64_MAX)
+			found_entry_right->sle_lock.lock_length = 0;
+		else
+			found_entry_right->sle_lock.lock_length =
+			    found_entry_end - range_end;
 		LogEntry("Right split", found_entry_right);
 		glist_add_tail(split_list, &(found_entry_right->sle_list));
 	}
-- 
1.7.1

