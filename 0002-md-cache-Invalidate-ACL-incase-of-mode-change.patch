From 4e77e18c0c1e1ca3df1bb04722a29f3b325613fc Mon Sep 17 00:00:00 2001
From: Soumya Koduri <skoduri@redhat.com>
Date: Fri, 18 Nov 2016 17:46:16 +0530
Subject: [PATCH] md-cache: Invalidate ACL incase of mode change

In case of ACL enabled, any change in mode, owner/group
attributes result in change of ACL set as well. Hence
md-cache needs to re-fetch acl attribute too for such cases.

Change-Id: I2c0fcd17ba9e8af78d6a1d047a5a080237d3d267
Signed-off-by: Soumya Koduri <skoduri@redhat.com>
---
 src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_handle.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_handle.c b/src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_handle.c
index 06f24dd..bf59bf1 100644
--- a/src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_handle.c
+++ b/src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_handle.c
@@ -36,6 +36,7 @@
 #include "fsal_convert.h"
 #include "FSAL/fsal_commonlib.h"
 #include "nfs4_acls.h"
+#include "nfs_exports.h"
 #include <os/subr.h>
 
 #include "mdcache_lru.h"
@@ -1127,6 +1128,7 @@ static fsal_status_t mdcache_setattr2(struct fsal_obj_handle *obj_hdl,
 		container_of(obj_hdl, mdcache_entry_t, obj_handle);
 	fsal_status_t status;
 	uint64_t change;
+	bool need_acl = false;
 
 	PTHREAD_RWLOCK_wrlock(&entry->attr_lock);
 
@@ -1140,8 +1142,16 @@ static fsal_status_t mdcache_setattr2(struct fsal_obj_handle *obj_hdl,
 	if (FSAL_IS_ERROR(status))
 		goto unlock;
 
-	status = mdcache_refresh_attrs(
-				entry, (attrs->valid_mask & ATTR_ACL) != 0);
+	/* In case of ACL enabled, any of the below attribute changes
+	 * result in change of ACL set as well.
+	 */
+	if (!op_ctx_export_has_option(EXPORT_OPTION_DISABLE_ACL) &&
+	    (FSAL_TEST_MASK(attrs->valid_mask,
+			   ATTR_MODE | ATTR_OWNER | ATTR_GROUP | ATTR_ACL))) {
+		need_acl = true;
+	}
+
+	status = mdcache_refresh_attrs(entry, need_acl);
 
 	if (!FSAL_IS_ERROR(status) && change == entry->attrs.change) {
 		LogDebug(COMPONENT_CACHE_INODE,
-- 
2.5.5

