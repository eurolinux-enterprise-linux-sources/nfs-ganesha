From 4b437afeda4709f807f147839aef25d691996cd8 Mon Sep 17 00:00:00 2001
From: Jiffin Tony Thottan <jthottan@redhat.com>
Date: Fri, 26 Jun 2015 18:49:27 +0530
Subject: [PATCH 1/3] FSAL_GLUSTER : invalid usage of is_dir variable in acl
 api's

Previously is_dir set to false only for regular files.So that other
files like block, character , socket, symlink etc will get inconsistent
value for is_dir variable.This patch will fix the same.

Change-Id: If104648f7f29927ad09a528585f5b4eae138042a
Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
---
 src/FSAL/FSAL_GLUSTER/gluster_internal.c | 13 ++++---------
 src/FSAL/FSAL_GLUSTER/handle.c           | 27 +++++++++------------------
 2 files changed, 13 insertions(+), 27 deletions(-)

diff --git a/src/FSAL/FSAL_GLUSTER/gluster_internal.c b/src/FSAL/FSAL_GLUSTER/gluster_internal.c
index 4ad11e4..97391a3 100644
--- a/src/FSAL/FSAL_GLUSTER/gluster_internal.c
+++ b/src/FSAL/FSAL_GLUSTER/gluster_internal.c
@@ -267,16 +267,11 @@ int construct_handle(struct glusterfs_export *glexport, const struct stat *sb,
 
 	stat2fsal_attributes(sb, &constructing->handle.attributes);
 
-	switch (constructing->handle.type) {
-	case REGULAR_FILE:
-		buffxstat.is_dir = false;
-		break;
-	case DIRECTORY:
+	if (constructing->handle.attributes.type == DIRECTORY)
 		buffxstat.is_dir = true;
-		break;
-	default:
-		break;
-	}
+	else
+		buffxstat.is_dir = false;
+
 	status = glusterfs_get_acl(glexport, glhandle, &buffxstat,
 				   &constructing->handle.attributes);
 
diff --git a/src/FSAL/FSAL_GLUSTER/handle.c b/src/FSAL/FSAL_GLUSTER/handle.c
index 800b5b8..3de5788 100644
--- a/src/FSAL/FSAL_GLUSTER/handle.c
+++ b/src/FSAL/FSAL_GLUSTER/handle.c
@@ -681,16 +681,12 @@ static fsal_status_t getattrs(struct fsal_obj_handle *obj_hdl)
 
 	fsalattr = &objhandle->handle.attributes;
 	stat2fsal_attributes(&buffxstat.buffstat, fsalattr);
-	switch (obj_hdl->type) {
-	case REGULAR_FILE:
-		buffxstat.is_dir = false;
-		break;
-	case DIRECTORY:
+	if (obj_hdl->type == DIRECTORY)
 		buffxstat.is_dir = true;
-		break;
-	default:
-		break;
-	}
+
+	else
+		buffxstat.is_dir = false;
+
 	status = glusterfs_get_acl(glfs_export, objhandle->glhandle,
 				   &buffxstat, fsalattr);
 
@@ -791,16 +787,11 @@ static fsal_status_t setattrs(struct fsal_obj_handle *obj_hdl,
 
 	if (NFSv4_ACL_SUPPORT) {
 		if (FSAL_TEST_MASK(attrs->mask, ATTR_ACL)) {
-			switch (obj_hdl->type) {
-			case REGULAR_FILE:
-				buffxstat.is_dir = false;
-				break;
-			case DIRECTORY:
+			if (obj_hdl->type == DIRECTORY)
 				buffxstat.is_dir = true;
-				break;
-			default:
-				break;
-			}
+			else
+				buffxstat.is_dir = false;
+
 			FSAL_SET_MASK(attr_valid, XATTR_ACL);
 			status =
 			  glusterfs_process_acl(glfs_export->gl_fs,
-- 
2.1.0

