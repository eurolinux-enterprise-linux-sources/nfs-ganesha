From b1df525594643bd85c4ecd23a97bdd25baafee7d Mon Sep 17 00:00:00 2001
From: Soumya Koduri <skoduri@redhat.com>
Date: Fri, 12 Jun 2015 14:06:10 +0530
Subject: [PATCH 1/5] FSAL_GLUSTER: Stop polling upcall events if not supported

In case if upcall events are not enabled, stop polling and exit
the upcall thread.

Change-Id: I0a9e9cc27794dae2395e96a2c5d02434d897f148
Signed-off-by: Soumya Koduri <skoduri@redhat.com>
---
 src/FSAL/FSAL_GLUSTER/fsal_up.c |   35 ++++++++++++++++++++++-------------
 1 files changed, 22 insertions(+), 13 deletions(-)

diff --git a/src/FSAL/FSAL_GLUSTER/fsal_up.c b/src/FSAL/FSAL_GLUSTER/fsal_up.c
index 298ff9b..6584bf7 100644
--- a/src/FSAL/FSAL_GLUSTER/fsal_up.c
+++ b/src/FSAL/FSAL_GLUSTER/fsal_up.c
@@ -155,23 +155,31 @@ void *GLUSTERFSAL_UP_Thread(void *Arg)
 		reason = callback.reason;
 
 		if (rc != 0) {
-			LogCrit(COMPONENT_FSAL_UP,
-				"Poll upcall failed for %p. rc %d errno %d (%s) reason %d",
-				glfsexport->gl_fs, rc, errsv,
-				strerror(errsv), reason);
-
-			rc = -(rc);
-			/* Could be ENOMEM issues. Retry for couple of times
+			/* if ENOMEM retry for couple of times
 			 * and then exit
 			 */
-			if (retry < 10) {
+			if ((errsv == ENOMEM) && (retry < 10)) {
 				sleep(1);
 				retry++;
 				continue;
 			} else {
-				LogFatal(COMPONENT_FSAL_UP,
-					 "Retry limit for poll_upcall exceeded for (%p).",
-					 glfsexport->gl_fs);
+				switch (errsv) {
+				case ENOMEM:
+					LogFatal(COMPONENT_FSAL_UP,
+						 "Memory allocation failed during poll_upcall for (%p).",
+						 glfsexport->gl_fs);
+					break;
+				case ENOTSUP:
+					LogEvent(COMPONENT_FSAL_UP,
+						 "Upcall feature is not supported for (%p).",
+						 glfsexport->gl_fs);
+					break;
+				default:
+					LogCrit(COMPONENT_FSAL_UP,
+						"Poll upcall failed for %p. rc %d errno %d (%s) reason %d",
+						glfsexport->gl_fs, rc, errsv,
+						strerror(errsv), reason);
+				}
 				return NULL;
 			}
 		}
@@ -182,9 +190,10 @@ void *GLUSTERFSAL_UP_Thread(void *Arg)
 			     "Received upcall event: reason(%d)",
 			     reason);
 
-		if (!reason)
+		if (!reason) {
+			sleep(1);
 			continue;
-
+		}
 
 		/* Decide what type of event this is
 		 * inode update / invalidate? */
-- 
1.7.1

